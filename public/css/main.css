/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
.z-1 {
  z-index: 1;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.h-auto {
  height: auto;
}
.h-full {
  height: 100%;
}
.min-h-screen {
  min-height: 100vh;
}
.w-full {
  width: 100%;
}
.max-w-full {
  max-width: 100%;
}
.flex-1 {
  flex: 1;
}
.grow {
  flex-grow: 1;
}
.border-separate {
  border-collapse: separate;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.items-center {
  align-items: center;
}
.overflow-x-auto {
  overflow-x: auto;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.object-cover {
  object-fit: cover;
}
.text-center {
  text-align: center;
}
.capitalize {
  text-transform: capitalize;
}
.italic {
  font-style: italic;
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
    }
  }
}
